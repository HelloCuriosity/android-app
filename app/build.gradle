def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.triplet.play'
apply from: rootProject.file('quality/quality-gate.gradle')

import com.github.triplet.gradle.androidpublisher.*

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.hello.curiosity"
        minSdkVersion 19
        targetSdkVersion 30

        versionCode 1
        if (ciBuild) {
            versionCode = ciBuildNr as Integer
        }
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        multiDexEnabled true

        testInstrumentationRunner "com.hello.curiosity.template.test.runner.TestRunner"
    }

    signingConfigs {
        release {
            storeFile rootProject.file("keystore/android-app.keystore")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias "android-app"
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            testCoverageEnabled true
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "all"
    productFlavors {
        production {
            dimension "all"
        }
        staging {
            dimension "all"
            versionNameSuffix "-staging"
            applicationIdSuffix ".staging"
        }
    }

    play {
        serviceAccountCredentials.set(rootProject.file("android-template-bb645-9c243c209c9c.json"))
        releaseStatus.set(ReleaseStatus.COMPLETED)
        resolutionStrategy.set(ResolutionStrategy.IGNORE)
        defaultToAppBundles.set(true)
    }

    playConfigs {
        productionRelease {
            enabled.set(true)
            track.set("internal")
            artifactDir.set(file("build/outputs/bundle/productionRelease"))
        }
        stagingRelease {
            enabled.set(true)
            track.set("internal")
            artifactDir.set(file("build/outputs/bundle/stagingRelease"))
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/rxjava.properties'
    }

    buildFeatures {
        viewBinding = true
    }

    dexOptions {
        javaMaxHeapSize "4g"
        // Skip pre-dexing when running on CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !ciBuild
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Modules
    implementation project(':data-sdk')
    implementation project(':kotlin-sdk')

    // Android
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'com.google.android.material:material:1.2.1'
    implementation "androidx.multidex:multidex:2.0.1"

    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.30'

    // Hello Curiosity
    implementation 'com.github.curious-coding:android-animations:0.4.0'

    // RxJava
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.10'
    implementation 'io.reactivex.rxjava3:rxkotlin:3.0.1'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'

    // Testing
    testImplementation project(':test-android-utils')

    testImplementation 'androidx.test:core:1.3.0'

    // JUnit
    testImplementation 'androidx.test.ext:junit:1.1.2'

    // Mockito
    testImplementation 'org.mockito:mockito-core:3.7.7'
    testImplementation('com.nhaarman:mockito-kotlin:1.5.0') {
        exclude group: 'org.mockito', module: 'mockito-core'
    }

    // Robolectric
    testImplementation('org.robolectric:robolectric:4.5.1') {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
        exclude group: 'com.google.auto.service', module: 'auto-service'
    }

    // Instrumentation tests

    // Android
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

    // Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
