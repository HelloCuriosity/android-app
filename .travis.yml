dist: trusty
language: android
branches:
  only:
    - master

addons:
  sonarcloud:
    organization: "curious-coding"
    token:
      secure: ${SONAR_TOKEN}

jdk:
  - oraclejdk8

env:
  global:
    - ADB_INSTALL_TIMEOUT=10

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - '$HOME/.sonar/cache'
    - '$HOME/.gradle/daemon'     #Cache daemon logs
    - '$HOME/.gradle/native'     #Cache library downloaded from the gradle dependency
    - '$HOME/.gradle/wrapper'    #Cache the gradle
    - "$HOME/.android/build-cache/"

android:
  components:
    - tools
    - platform-tools
    - build-tools-29.0.2
    - android-29
    - extra-android-support
    - extra-google-m2repository
    - extra-android-m2repository
    - sys-img-$ABI-$API_TAG-$EMULATOR_LEVEL
  licenses:
    - android-sdk-license-.+
    - google-gdk-license-.+
jobs:
  include:
    - stage: Build
      name: Linting
      env: MAKETARGET=lint
    - name: Assemble
      env: MAKETARGET=assemble
    - name: Bundle
      env: MAKETARGET=bundle
    - name: Unit Test
      env: MAKETARGET=unit-test
    - name: Android Test
      env:
        - MAKETARGET=android-test
        - EMULATOR_LEVEL=25
        - ABI="arm64-v8a"
        - API_TAG="google_apis"
    - name: Coverage Report
      env: MAKETARGET=report
    - name: Static Analysis
      env: MAKETARGET=analysis

before_script:
  - android list target | grep -E '^id:' | awk -F '"' '{$1=""; print $2}'
  - if [[ ! -z "${EMULATOR_LEVEL}" ]]; then echo "y" | android update sdk -a --no-ui
    --filter "sys-img-${ABI}-${API_TAG}-${EMULATOR_LEVEL}"; fi
  - if [[ ! -z "${EMULATOR_LEVEL}" ]] && [[ "${API_TAG}" == "android" ]]; then API_TAG="default";
    export API_TAG; fi
  - if [[ ! -z "${EMULATOR_LEVEL}" ]]; then echo no | android create avd --force -n
    test -t "android-${EMULATOR_LEVEL}" -b "${ABI}" -g "${API_TAG}" -c 100M; fi
  - if [[ ! -z "${EMULATOR_LEVEL}" ]]; then { emulator -avd test -no-window &}; fi
  - if [[ ! -z "${EMULATOR_LEVEL}" ]]; then android-wait-for-emulator; fi
  - if [[ ! -z "${EMULATOR_LEVEL}" ]]; then { adb shell input keyevent 82 &}; fi

script:
  - make clean $MAKETARGET

after_success:
  - bash <(curl -s https://codecov.io/bash)